/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include <string.h>
#include <dlfcn.h>
/* Header for class lib_func_jni_JniTest */

#ifndef _Included_lib_func_jni_JniTest
#define _Included_lib_func_jni_JniTest
#ifdef __cplusplus
extern "C" {
#endif


jstring chartojstr(JNIEnv* env, const char* pat);


/*
 * Class:  lib_func_jni_JniTest
 * Method: fnwindll
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_lib_func_jni_JniTest_fnwindll
  (JNIEnv * env, jobject jobj){  
  	
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: getLine
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_lib_func_jni_JniTest_getLine
  (JNIEnv * env, jobject jobj, jstring param){
  	char line[300];
	sprintf(line,"getLine: %s ",param);
	return chartojstr(env,line);
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testFloat
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_lib_func_jni_JniTest_testFloat
  (JNIEnv * env, jclass cls, jfloat param){
  	
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testDouble
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_lib_func_jni_JniTest_testDouble
  (JNIEnv * env, jclass cls, jdouble param){
  	
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testInt
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_lib_func_jni_JniTest_testInt
  (JNIEnv * env, jclass cls, jint param){
  	
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testChar
 * Signature: (C)C
 */
JNIEXPORT jchar JNICALL Java_lib_func_jni_JniTest_testChar
  (JNIEnv * env, jclass cls, jchar param){
  		
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testShort
 * Signature: (S)S
 */
JNIEXPORT jshort JNICALL Java_lib_func_jni_JniTest_testShort
  (JNIEnv * env, jclass cls, jshort param){
  		
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testBoolean
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_lib_func_jni_JniTest_testBoolean
  (JNIEnv * env, jclass cls, jboolean param){
  	
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testLong
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_lib_func_jni_JniTest_testLong
  (JNIEnv * env, jclass cls, jlong param){
  	
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testString
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_lib_func_jni_JniTest_testString
  (JNIEnv * env, jclass cls, jstring param){
  		
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testStringArray
 * Signature: ([Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_lib_func_jni_JniTest_testStringArray
  (JNIEnv * env, jclass cls, jobjectArray param){
  		
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testIntArray
 * Signature: ([I)[I
 */
JNIEXPORT jintArray JNICALL Java_lib_func_jni_JniTest_testIntArray
  (JNIEnv * env, jclass cls, jintArray param){
  		
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testObject
 * Signature: (Llib/func/jni/Person;)Llib/func/jni/Person;
 */
JNIEXPORT jobject JNICALL Java_lib_func_jni_JniTest_testObject
  (JNIEnv * env, jclass cls, jobject param){
  		
  }

/*
 * Class:  lib_func_jni_JniTest
 * Method: testException
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_lib_func_jni_JniTest_testException
  (JNIEnv * env, jclass cls){}



jstring chartojstr(JNIEnv* env, const char* pat)
{
	jclass strClass = env->FindClass("Ljava/lang/String;");
	jmethodID ctorID = env->GetMethodID(strClass, "<init>", "([BLjava/lang/String;)V");
	jbyteArray bytes = env->NewByteArray(strlen(pat));
	env->SetByteArrayRegion(bytes, 0, strlen(pat), (jbyte*)pat);
	jstring encoding = env->NewStringUTF("utf-8");
	printf("chartojstr    success..... ");
	return (jstring)env->NewObject(strClass, ctorID, bytes, encoding);
}
#ifdef __cplusplus
}
#endif
#endif
